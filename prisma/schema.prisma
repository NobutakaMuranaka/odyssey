// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Question {
  id            Int       @id @default(autoincrement()) // 質問ID (PK)
  question_text String
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  answers       Answer[]  // 関連する回答
}

model Answer {
  id            Int       @id @default(autoincrement()) // 回答ID (PK)
  user          User      @relation(fields: [user_id], references: [id]) // ユーザーとのリレーション (FK)
  user_id       Int
  question      Question  @relation(fields: [question_id], references: [id]) // 質問とのリレーション (FK)
  question_id   Int
  user_answer   String
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
}

model Account {
  id                 Int      @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int       @id @default(autoincrement())
  sessionToken String    @unique
  userId       Int
  expires      DateTime
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  answers       Answer[]  // 追加：UserからAnswerへのリレーションフィールド
}
